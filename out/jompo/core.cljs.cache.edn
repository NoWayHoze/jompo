;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name jompo.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core}, :uses nil, :defs {override {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 203, :column 7, :end-line 203, :end-column 15, :arglists (quote ([super-class & {:keys [constructor], :as members}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(super-class {:keys [constructor], :as members})], :arglists ([super-class & {:keys [constructor], :as members}]), :arglists-meta (nil)}}, :name jompo.core/override, :variadic true, :file "src/cljs/jompo/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(super-class {:keys [constructor], :as members})], :arglists ([super-class & {:keys [constructor], :as members}]), :arglists-meta (nil)}, :method-params [(super-class {:keys [constructor], :as members})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 203, :end-line 203, :max-fixed-arity 1, :fn-var true, :arglists ([super-class & {:keys [constructor], :as members}])}, dec-fn? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 55, :column 7, :end-line 55, :end-column 14, :arglists (quote ([x]))}, :name jompo.core/dec-fn?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, main {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 9, :column 8, :end-line 9, :end-column 12, :arglists (quote ([]))}, :name jompo.core/main, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, inc-fn? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 50, :column 7, :end-line 50, :end-column 14, :arglists (quote ([x]))}, :name jompo.core/inc-fn?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, setter? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 22, :column 7, :end-line 22, :end-column 14, :arglists (quote ([x]))}, :name jompo.core/setter?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, adder? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 28, :column 7, :end-line 28, :end-column 13, :arglists (quote ([x]))}, :name jompo.core/adder?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, side-effect? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 39, :column 7, :end-line 39, :end-column 19, :arglists (quote ([x]))}, :name jompo.core/side-effect?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 19, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, state! {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 125, :column 7, :end-line 125, :end-column 13, :arglists (quote ([this & {:keys [constructor], :as all}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this {:keys [constructor], :as all})], :arglists ([this & {:keys [constructor], :as all}]), :arglists-meta (nil)}}, :name jompo.core/state!, :variadic true, :file "src/cljs/jompo/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this {:keys [constructor], :as all})], :arglists ([this & {:keys [constructor], :as all}]), :arglists-meta (nil)}, :method-params [(this {:keys [constructor], :as all})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists ([this & {:keys [constructor], :as all}])}, normalize-op {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 98, :column 7, :end-line 98, :end-column 19, :arglists (quote ([op]))}, :name jompo.core/normalize-op, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 19, :method-params ([op]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([op]))}, extend {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 195, :column 7, :end-line 195, :end-column 13, :arglists (quote ([super-class & {:keys [constructor], :as members}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(super-class {:keys [constructor], :as members})], :arglists ([super-class & {:keys [constructor], :as members}]), :arglists-meta (nil)}}, :name jompo.core/extend, :variadic true, :file "src/cljs/jompo/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(super-class {:keys [constructor], :as members})], :arglists ([super-class & {:keys [constructor], :as members}]), :arglists-meta (nil)}, :method-params [(super-class {:keys [constructor], :as members})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 1, :fn-var true, :arglists ([super-class & {:keys [constructor], :as members}])}, pure-fn? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 44, :column 7, :end-line 44, :end-column 15, :arglists (quote ([x]))}, :name jompo.core/pure-fn?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, key-type {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 77, :column 7, :end-line 77, :end-column 15, :arglists (quote ([my-key]))}, :name jompo.core/key-type, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 15, :method-params ([my-key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 1, :fn-var true, :arglists (quote ([my-key]))}, page {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 6, :column 7, :end-line 6, :end-column 11, :arglists (quote ([]))}, :name jompo.core/page, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, jompo? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 13, :column 7, :end-line 13, :end-column 13, :arglists (quote ([x]))}, :name jompo.core/jompo?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, setter-to-getter {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 64, :column 7, :end-line 64, :end-column 23, :arglists (quote ([x]))}, :name jompo.core/setter-to-getter, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 64, :end-line 64, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, app-state {:name jompo.core/app-state, :file "src/cljs/jompo/core.cljs", :line 4, :column 1, :end-line 4, :end-column 19, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 4, :column 10, :end-line 4, :end-column 19}}, remover? {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 33, :column 7, :end-line 33, :end-column 15, :arglists (quote ([x]))}, :name jompo.core/remover?, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, virtual {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 215, :column 7, :end-line 215, :end-column 14, :arglists (quote ([this & anything])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this anything)], :arglists ([this & anything]), :arglists-meta (nil)}}, :name jompo.core/virtual, :variadic true, :file "src/cljs/jompo/core.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(this anything)], :arglists ([this & anything]), :arglists-meta (nil)}, :method-params [(this anything)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 215, :end-line 215, :max-fixed-arity 1, :fn-var true, :arglists ([this & anything])}, new-class {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 129, :column 7, :end-line 129, :end-column 16, :arglists (quote ([& {:keys [constructor], :as members}])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [constructor], :as members})], :arglists ([& {:keys [constructor], :as members}]), :arglists-meta (nil)}}, :name jompo.core/new-class, :variadic true, :file "src/cljs/jompo/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [constructor], :as members})], :arglists ([& {:keys [constructor], :as members}]), :arglists-meta (nil)}, :method-params [({:keys [constructor], :as members})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [constructor], :as members}])}, getter-to-setter {:protocol-inline nil, :meta {:file "/home/nwh/work/jompo/src/cljs/jompo/core.cljs", :line 70, :column 7, :end-line 70, :end-column 23, :arglists (quote ([x]))}, :name jompo.core/getter-to-setter, :variadic false, :file "src/cljs/jompo/core.cljs", :end-column 23, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :y! :jompo :dec-fn :foo!! :remover :field :setter :pure-fn :div :foo! :adder :foo :inc-fn :constructor :members :mc :side-effect :text}, :order [:text :div :foo :foo!! :jompo :setter :pure-fn :side-effect :adder :remover :inc-fn :dec-fn :field :y :y! :foo! :constructor :members :mc]}, :doc nil}